# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'codelab-monitor'
# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093
            - '192.168.209.234:9093'  # Adjust the port if necessary

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"
  - '/etc/prometheus/rules/prometheus_rules.yaml'

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["192.168.209.234:9090"]
      
  # The job name is added as a label (app.py) to any timeseries scraped from this config.    
  
  - job_name: 'nodeexporter'
  
    static_configs:
      - targets: ['<node_exporter_host>:9100']
      
  # - job_name: 'python_app' # container name
  - job_name: 'main'
    static_configs:
      - targets: ['192.168.209.234:8001']
  
      
  # Create a job for Docker daemons.
  
  - job_name: 'docker'
    static_configs:
      - targets: ['192.168.209.234:9323']
   
   # Create a job for Docker Swarm containers.
   # Create a job for Docker Swarm containers.
  - job_name: 'dockerswarm'
    dockerswarm_sd_configs:
      - host: tcp://192.168.209.234:2375  # Adjusted to TCP connection
        role: tasks
    relabel_configs:
      # Only keep containers that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running
        action: keep
      # Only keep containers that have a `prometheus-job` label.
      - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
        regex: .+
        action: keep
      # Use the prometheus-job Swarm label as Prometheus job label.
      - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
        target_label: job

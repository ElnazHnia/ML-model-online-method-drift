@startuml
class TitanicMLP {
  +__init__(input_size: int)
  +forward(x: torch.Tensor) : torch.Tensor
  -fc1 : torch.nn.Linear
  -fc2 : torch.nn.Linear
  -fc3 : torch.nn.Linear
}

class StatHook {
  +hook_fn(module, input, output)
  -means : list
  -stds : list
  -hist_data : list
}

class prometheus_client {
  +start_http_server(port: int)
  +Summary
  +Histogram
}

class evidently.report.Report {
  +run(reference_data: pd.DataFrame, current_data: pd.DataFrame)
  +save_html(file_name: str)
}

class evidently.metric_preset.DataDriftPreset
class pd.DataFrame
class torch.utils.data.TensorDataset
class torch.utils.data.DataLoader
class torch.nn.CrossEntropyLoss
class torch.optim.SGD
class logging.Logger
class datetime.datetime

prometheus_client --> TitanicMLP
prometheus_client --> StatHook
TitanicMLP --> StatHook : uses
TitanicMLP --> "1" torch.nn.Linear
StatHook --> torch.Tensor : uses
evidently.report.Report --> evidently.metric_preset.DataDriftPreset
evidently.metric_preset.DataDriftPreset --> pd.DataFrame
@enduml
